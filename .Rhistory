sheet_id <- "1JWk84PgKI_DNqgl8ncdx8_KJpBi7l7ZuoHrCutoBnGc"
gid <- "0"
url <- paste0("https://docs.google.com/spreadsheets/d/", sheet_id, "/export?format=csv&gid=", gid)
df <- read_csv(url) # construct data frame
df <- df %>%
rename_all(tolower) # make all column names lowercase
# Preview structure
str(df)
head(df)
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
Match_ID = .$Match_ID,
Team = .$Team_A,
Opponent = .$Team_B,
Team_Score = .$Score_A,
Opponent_Score = .$Score_B,
Result = ifelse(.$Winner == .$Team_A, 1, 0)
),
data.frame(
Match_ID = .$Match_ID,
Team = .$Team_B,
Opponent = .$Team_A,
Team_Score = .$Score_B,
Opponent_Score = .$Score_A,
Result = ifelse(.$Winner == .$Team_B, 1, 0)
)
))
long_df <- long_df %>%
arrange(Team, Match_ID) %>%
group_by(Team) %>%
mutate(Match_Number = row_number()) %>%
ungroup()
View(long_df)
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_ID = .$match_ID,
team = .$team_A,
Opponent = .$team_B,
Team_Score = .$score_A,
Opponent_Score = .$score_B,
Result = ifelse(.$winner == .$team_A, 1, 0)
),
data.frame(
Match_ID = .$match_ID,
Team = .$team_B,
Opponent = .$team_A,
Team_Score = .$score_B,
Opponent_Score = .$score_A,
Result = ifelse(.$winner == .$team_B, 1, 0)
)
))
View(long_df)
sheet_id <- "1JWk84PgKI_DNqgl8ncdx8_KJpBi7l7ZuoHrCutoBnGc"
gid <- "0"
url <- paste0("https://docs.google.com/spreadsheets/d/", sheet_id, "/export?format=csv&gid=", gid)
df <- read_csv(url) # construct data frame
df <- df %>%
rename_all(tolower) # make all column names lowercase
# Preview structure
str(df)
head(df)
# preprocessing -------------------------------------------------------
# Create one row per team per match
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_ID = .$match_ID,
team = .$team_A,
Opponent = .$team_B,
Team_Score = .$score_A,
Opponent_Score = .$score_B,
Result = ifelse(.$winner == .$team_A, 1, 0)
),
data.frame(
Match_ID = .$match_ID,
Team = .$team_B,
Opponent = .$team_A,
Team_Score = .$score_B,
Opponent_Score = .$score_A,
Result = ifelse(.$winner == .$team_B, 1, 0)
)
))
long_df <- long_df %>%
arrange(Team, Match_ID) %>%
group_by(Team) %>%
mutate(Match_Number = row_number()) %>%
ungroup()
# Preview
head(long_df)
# Create one row per team per match
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_ID = .$match_id,
team = .$team_a,
Opponent = .$team_b,
Team_Score = .$score_a,
Opponent_Score = .$score_b,
Result = ifelse(.$winner == .$team_a, 1, 0)
),
data.frame(
Match_ID = .$match_ID,
Team = .$team_b,
Opponent = .$team_a,
Team_Score = .$score_b,
Opponent_Score = .$score_a,
Result = ifelse(.$winner == .$team_b, 1, 0)
)
))
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_ID = .$match_id,
team = .$team_a,
Opponent = .$team_b,
Team_Score = .$score_a,
Opponent_Score = .$score_b,
Result = ifelse(.$winner == .$team_a, 1, 0)
),
data.frame(
Match_ID = .$match_id,
Team = .$team_b,
Opponent = .$team_a,
Team_Score = .$score_b,
Opponent_Score = .$score_a,
Result = ifelse(.$winner == .$team_b, 1, 0)
)
))
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_id = .$match_id,
team = .$team_a,
opponent = .$team_b,
team_score = .$score_a,
opponent_score = .$score_b,
result = ifelse(.$winner == .$team_a, 1, 0)
),
data.frame(
match_id = .$match_id,
team = .$team_b,
opponent = .$team_a,
team_score = .$score_b,
opponent_score = .$score_a,
result = ifelse(.$winner == .$team_b, 1, 0)
)
))
View(long_df)
long_df <- long_df %>%
arrange(team, match_id) %>%
group_by(team) %>%
mutate(match_number = row_number()) %>%
ungroup()
# Preview
head(long_df)
# Plot W/L time series and rolling winrate for each team
teams <- unique(long_df$team)
for (team in teams) {
team_df <- long_df %>% filter(team == team)
# Rolling win rate (k = 3)
team_df <- team_df %>%
arrange(Match_Number) %>%
mutate(RollingWinRate = rollmean(Result, k = 3, fill = NA, align = "right"))
# Plot: Time series of W/L
p1 <- ggplot(team_df, aes(x = Match_Number, y = Result)) +
geom_line(group = 1) +
geom_point(aes(color = factor(Result)), size = 3) +
scale_color_manual(values = c("red", "green"), labels = c("Loss", "Win")) +
labs(title = paste("W/L Time Series -", team), y = "Result", x = "Match") +
theme_minimal()
print(p1)
# Plot: Rolling Win Rate
p2 <- ggplot(team_df, aes(x = Match_Number, y = RollingWinRate)) +
geom_line(color = "steelblue") +
geom_point(size = 2, color = "darkblue") +
labs(title = paste("Rolling Win Rate (k=3) -", team), y = "Win Rate", x = "Match") +
theme_minimal()
print(p2)
}
for (team in teams) {
team_df <- long_df %>% filter(team == team)
# Rolling win rate (k = 3)
team_df <- team_df %>%
arrange(match_number) %>%
mutate(RollingWinRate = rollmean(Result, k = 3, fill = NA, align = "right"))
# Plot: Time series of W/L
p1 <- ggplot(team_df, aes(x = match_number, y = Result)) +
geom_line(group = 1) +
geom_point(aes(color = factor(result)), size = 3) +
scale_color_manual(values = c("red", "green"), labels = c("Loss", "Win")) +
labs(title = paste("W/L Time Series -", team), y = "Result", x = "Match") +
theme_minimal()
print(p1)
# Plot: Rolling Win Rate
p2 <- ggplot(team_df, aes(x = match_number, y = RollingWinRate)) +
geom_line(color = "steelblue") +
geom_point(size = 2, color = "darkblue") +
labs(title = paste("Rolling Win Rate (k=3) -", team), y = "Win Rate", x = "Match") +
theme_minimal()
print(p2)
}
for (team in teams) {
team_df <- long_df %>% filter(team == team)
# Rolling win rate (k = 3)
team_df <- team_df %>%
arrange(match_number) %>%
mutate(RollingWinRate = rollmean(Result, k = 3, fill = NA, align = "right"))
# Plot: Time series of W/L
p1 <- ggplot(team_df, aes(x = match_number, y = result)) +
geom_line(group = 1) +
geom_point(aes(color = factor(result)), size = 3) +
scale_color_manual(values = c("red", "green"), labels = c("Loss", "Win")) +
labs(title = paste("W/L Time Series -", team), y = "Result", x = "Match") +
theme_minimal()
print(p1)
# Plot: Rolling Win Rate
p2 <- ggplot(team_df, aes(x = match_number, y = RollingWinRate)) +
geom_line(color = "steelblue") +
geom_point(size = 2, color = "darkblue") +
labs(title = paste("Rolling Win Rate (k=3) -", team), y = "Win Rate", x = "Match") +
theme_minimal()
print(p2)
}
for (team in teams) {
team_df <- long_df %>% filter(team == team)
# Rolling win rate (k = 3)
team_df <- team_df %>%
arrange(match_number) %>%
mutate(RollingWinRate = rollmean(result, k = 3, fill = NA, align = "right"))
# Plot: Time series of W/L
p1 <- ggplot(team_df, aes(x = match_number, y = result)) +
geom_line(group = 1) +
geom_point(aes(color = factor(result)), size = 3) +
scale_color_manual(values = c("red", "green"), labels = c("Loss", "Win")) +
labs(title = paste("W/L Time Series -", team), y = "Result", x = "Match") +
theme_minimal()
print(p1)
# Plot: Rolling Win Rate
p2 <- ggplot(team_df, aes(x = match_number, y = RollingWinRate)) +
geom_line(color = "steelblue") +
geom_point(size = 2, color = "darkblue") +
labs(title = paste("Rolling Win Rate (k=3) -", team), y = "Win Rate", x = "Match") +
theme_minimal()
print(p2)
}
for (team in teams) {
team_df <- long_df %>% filter(team == team)
# Rolling win rate (k = 3)
team_df <- team_df %>%
arrange(match_number) %>%
mutate(RollingWinRate = rollmean(result, k = 3, fill = NA, align = "right"))
# Plot: Time series of W/L
p1 <- ggplot(team_df, aes(x = match_number, y = result)) +
geom_line(group = 1) +
geom_point(aes(color = factor(result)), size = 3) +
scale_color_manual(values = c("red", "green"), labels = c("Loss", "Win")) +
labs(title = paste("W/L Time Series -", team), y = "Result", x = "Match") +
theme_minimal()
print(p1)
# Plot: Rolling Win Rate
p2 <- ggplot(team_df, aes(x = match_number, y = RollingWinRate)) +
geom_line(color = "steelblue") +
geom_point(size = 2, color = "darkblue") +
labs(title = paste("Rolling Win Rate (k=3) -", team), y = "Win Rate", x = "Match") +
theme_minimal()
print(p2)
}
View(p1)
for (team in teams) {
team_df <- long_df %>% filter(team == team)
if (nrow(team_df) >= 6) {  # Minimum matches for meaningful HMM
hmm_model <- depmix(response = result ~ 1, family = binomial(), nstates = 2, data = team_df)
fitted <- fit(hmm_model, verbose = FALSE)
team_df$State <- posterior(fitted)$state
p3 <- ggplot(team_df, aes(x = match_number, y = result)) +
geom_point(aes(color = factor(State)), size = 3) +
geom_line(alpha = 0.5, group = 1) +
scale_color_manual(values = c("blue", "orange"), labels = c("State 1", "State 2")) +
labs(title = paste("HMM State Detection -", team), y = "Result", x = "Match") +
theme_minimal()
print(p3)
}
}
library(readxl)
library(dplyr)
library(ggplot2)
library(zoo)
library(depmixS4)
# data load + clean -------------------------------------------------------
# Constructs the URL for the Google sheet that contains the R6 data
sheet_id <- "1JWk84PgKI_DNqgl8ncdx8_KJpBi7l7ZuoHrCutoBnGc"
gid <- "716521061"
url <- paste0("https://docs.google.com/spreadsheets/d/", sheet_id, "/export?format=csv&gid=", gid)
r6 <- read_csv(url) # construct data frame
# Long-format data: one row per team per match
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_id = .$match_id,
map = .$map,
team = .$team_a,
opponent = .$team_b,
team_score = .$final_score_a,
opponent_score = .$final_score_b,
result = ifelse(.$winner == .$team_a, 1, 0)
),
data.frame(
match_id = .$match_id,
map = .$map,
team = .$team_b,
opponent = .$team_a,
team_score = .$final_score_a,
opponent_score = .$final_score_b,
result = ifelse(.$winner == .$team_b, 1, 0)
)
))
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_id = .$match_id,
map = .$map,
team = .$team_a,
opponent = .$team_b,
team_score = .$final_score_a,
opponent_score = .$final_score_b,
result = ifelse(.$winner == .$team_a, 1, 0)
),
data.frame(
match_id = .$match_id,
map = .$map,
team = .$team_b,
opponent = .$team_a,
team_score = .$final_score_a,
opponent_score = .$final_score_b,
result = ifelse(.$winner == .$team_b, 1, 0)
)
))
library(readxl)
library(dplyr)
library(ggplot2)
library(zoo)
library(depmixS4)
library(tidyverse)
# data load + clean -------------------------------------------------------
# Constructs the URL for the Google sheet that contains the R6 data
sheet_id <- "1JWk84PgKI_DNqgl8ncdx8_KJpBi7l7ZuoHrCutoBnGc"
gid <- "716521061"
url <- paste0("https://docs.google.com/spreadsheets/d/", sheet_id, "/export?format=csv&gid=", gid)
r6 <- read_csv(url) # construct data frame
r6 <- r6 %>%
rename_all(tolower) # make all column names lowercase
# preprocessing -------------------------------------------------------
# Long-format data: one row per team per match
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_id = .$match_id,
map = .$map,
team = .$team_a,
opponent = .$team_b,
team_score = .$final_score_a,
opponent_score = .$final_score_b,
result = ifelse(.$winner == .$team_a, 1, 0)
),
data.frame(
match_id = .$match_id,
map = .$map,
team = .$team_b,
opponent = .$team_a,
team_score = .$final_score_a,
opponent_score = .$final_score_b,
result = ifelse(.$winner == .$team_b, 1, 0)
)
))
library(readxl)
library(dplyr)
library(ggplot2)
library(zoo)
library(depmixS4)
library(tidyverse)
# data load + clean -------------------------------------------------------
# Constructs the URL for the Google sheet that contains the R6 data
sheet_id <- "1JWk84PgKI_DNqgl8ncdx8_KJpBi7l7ZuoHrCutoBnGc"
gid <- "716521061"
url <- paste0("https://docs.google.com/spreadsheets/d/", sheet_id, "/export?format=csv&gid=", gid)
df <- read_csv(url) # construct data frame
df <- df %>%
rename_all(tolower) # make all column names lowercase
# preprocessing -------------------------------------------------------
# Long-format data: one row per team per match
long_df <- df %>%
rowwise() %>%
do(rbind(
data.frame(
match_id = .$match_id,
map = .$map,
team = .$team_a,
opponent = .$team_b,
team_score = .$final_score_a,
opponent_score = .$final_score_b,
result = ifelse(.$winner == .$team_a, 1, 0)
),
data.frame(
match_id = .$match_id,
map = .$map,
team = .$team_b,
opponent = .$team_a,
team_score = .$final_score_a,
opponent_score = .$final_score_b,
result = ifelse(.$winner == .$team_b, 1, 0)
)
))
View(long_df)
# Order by team and match number
long_df <- long_df %>%
arrange(team, match_id) %>%
group_by(team) %>%
mutate(match_number = row_number()) %>%
ungroup()
teams <- unique(long_df$team)
for (team in teams) {
team_df <- long_df %>% filter(team == team)
# Rolling win rate (k = 3)
team_df <- team_df %>%
arrange(match_number) %>%
mutate(RollingWinRate = rollmean(Result, k = 3, fill = NA, align = "right"))
# W/L Time Series
p1 <- ggplot(team_df, aes(x = match_number, y = Result)) +
geom_line(group = 1) +
geom_point(aes(color = factor(Result)), size = 3) +
scale_color_manual(values = c("red", "green"), labels = c("Loss", "Win")) +
labs(title = paste("W/L Time Series -", team), y = "Result", x = "Match") +
theme_minimal()
print(p1)
# Rolling Win Rate
p2 <- ggplot(team_df, aes(x = match_number, y = RollingWinRate)) +
geom_line(color = "steelblue") +
geom_point(size = 2, color = "darkblue") +
labs(title = paste("Rolling Win Rate (k=3) -", team), y = "Win Rate", x = "Match") +
theme_minimal()
print(p2)
}
for (team in teams) {
team_df <- long_df %>% filter(team == team)
# Rolling win rate (k = 3)
team_df <- team_df %>%
arrange(match_number) %>%
mutate(RollingWinRate = rollmean(result, k = 3, fill = NA, align = "right"))
# W/L Time Series
p1 <- ggplot(team_df, aes(x = match_number, y = result)) +
geom_line(group = 1) +
geom_point(aes(color = factor(result)), size = 3) +
scale_color_manual(values = c("red", "green"), labels = c("Loss", "Win")) +
labs(title = paste("W/L Time Series -", team), y = "Result", x = "Match") +
theme_minimal()
print(p1)
# Rolling Win Rate
p2 <- ggplot(team_df, aes(x = match_number, y = RollingWinRate)) +
geom_line(color = "steelblue") +
geom_point(size = 2, color = "darkblue") +
labs(title = paste("Rolling Win Rate (k=3) -", team), y = "Win Rate", x = "Match") +
theme_minimal()
print(p2)
}
View(team_df)
View(team_df)
teams <- unique(long_df$team)
for (team in teams) {
team_df <- long_df %>% filter(team == team)
if (nrow(team_df) >= 6) {
hmm_model <- depmix(response = result ~ 1, family = binomial(), nstates = 2, data = team_df)
fitted <- fit(hmm_model, verbose = FALSE)
team_df$State <- posterior(fitted)$state
p3 <- ggplot(team_df, aes(x = match_number, y = result)) +
geom_point(aes(color = factor(State)), size = 3) +
geom_line(alpha = 0.5, group = 1) +
scale_color_manual(values = c("blue", "orange"), labels = c("State 1", "State 2")) +
labs(title = paste("HMM State Detection -", team), y = "Result", x = "Match") +
theme_minimal()
print(p3)
}
}
momentum_check <- long_df %>%
group_by(Team) %>%
mutate(Prev1 = lag(result), Prev2 = lag(result, 2)) %>%
filter(Prev1 == 1 & Prev2 == 1) %>%
summarise(NextWins = sum(result == 1, na.rm = TRUE),
Total = n(),
WinRateAfterStreak = NextWins / Total) %>%
filter(Total > 0)
momentum_check <- long_df %>%
group_by(team) %>%
mutate(Prev1 = lag(result), Prev2 = lag(result, 2)) %>%
filter(Prev1 == 1 & Prev2 == 1) %>%
summarise(NextWins = sum(result == 1, na.rm = TRUE),
Total = n(),
WinRateAfterStreak = NextWins / Total) %>%
filter(Total > 0)
print(momentum_check)
View(momentum_check)
print(momentum_check)
